<?php

/**
 * sfGuardUserTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class sfGuardUserTable extends PluginsfGuardUserTable {

    /**
     * Returns an instance of this class.
     *
     * @return object sfGuardUserTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('sfGuardUser');
    }

    /**
     * @author Uday Shankar Singh <udayshankar1306@gmail.com>
     * 
     * @param Array $groups
     * @return Array - ARRAY OF OPTIONS AND VALUES EXCEPT DIRECTOR AND PRINCIPAL AS THESED ARE ONLY ONE IN EVERY COLLEGE SYSTEM
     */
    public function getRefinedGroups($groups) {

        $result = Array();
        foreach ($groups as $data) {
            if (!in_array($data['id'], array(1, 2))) {
                $result['values'][] = $data['id'];
                $result['options'][] = $data['description'];
            }
        }

        return $result;
    }

    public function checkUserExsistance($params) {
        $result = $this->createQuery('c')
                ->select('count(*) as count')
                ->from('sfGuardUser c')
                ->where('c.username = ? ', $params['user_mail'])
                ->fetchOne();

        return $result->getCount();
    }

    public function saveUserData($params, $passGenerated) {

        $user = new sfGuardUser();
        $user->setFirstName($params['first_name']);
        $user->setLastName($params['last_name']);
        $user->setEmailAddress($params['user_mail']);
        $user->setUsername($params['user_mail']); // SAVING user_mail AS USER NAME can be changed with user_name IF NEEDED
        $user->setPassword($passGenerated);
        $user->save();

        if ($user->getId()) {
            $userGroup = new sfGuardUserGroup();
            $userGroup->setGroupId($params['user_dept']);
            $userGroup->setUserId($user->getId());
            $userGroup->save();

            return TRUE;
        } else
            return FALSE;
    }

    public function getAllUsers($offset, $limit) {
        //====================GETTING USER DATA=================================
        $userTblResult = $this->createQuery()
                ->select('sfu.id, sfu.first_name, sfu.last_name, sfu.email_address, ug.description as user_group')
                ->from('sfGuardUser sfu')
                ->innerJoin('sfu.Groups ug')
                ->where('is_super_admin != ?', 1)
                ->offset($offset)
                ->limit($limit)
                ->fetchArray();

        //====================GETTING USER DATA=================================
        $totalRecords = $this->createQuery()
                ->select('count(*) as totalRecords')
                ->from('sfGuardUser sfu')
                ->innerJoin('sfu.Groups ug')
                ->where('is_super_admin != ?', 1)
                ->fetchArray();

        //===================GETTING DEPARTMENT DATA============================
        $deptData = DepartmentTable::getInstance()->findAll()->toArray();
        $deptArray = Array();
        foreach ($deptData as $data) {
            $deptArray[$data['id']] = $data['name'];
        }

        //================CREATING CUSTOM ARRAY FOR DISPLAY=====================
        $i = 0;
        $userList = Array();
        foreach ($userTblResult as $resultSet) {
            $userList[$i]['record_id'] = $resultSet['id'];
            $userList[$i]['first_name'] = $resultSet['first_name'];
            $userList[$i]['last_name'] = $resultSet['last_name'];
            $userList[$i]['email_address'] = $resultSet['email_address'];
            $userList[$i]['user_group'] = $resultSet['user_group'];
            $userList[$i]['user_dept'] = isset($deptArray[$resultSet['id']]) ? $deptArray[$resultSet['id']] : 'NA';
            $i++;
        }

        $resultArray = Array();
        $resultArray['userList'] = $userList;
        $resultArray['totalRecords'] = $totalRecords[0]['totalRecords'];
        return $resultArray;
    }

    public function deleteUser($record_id) {
        Doctrine_Query::create()->delete()->from('sfGuardUser')->where('id = ?', $record_id)->execute();
        return TRUE;
    }

    public function totalUser() {
        $query = Doctrine_Query::create()->select('count(*) as total')->from('sfGuardUser')->fetchArray();
        $totalRecords = $query[0]['total'];
        return $totalRecords;
    }

}